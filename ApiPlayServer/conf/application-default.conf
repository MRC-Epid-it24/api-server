# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.http.secret.key = "zV;3:xvweW]@G5JTK7j;At<;pSj:NM=g[ALNpj?[NiWoUu3jK;K@s^a/LPf8S:5K"

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`

play.db.pool = hikaricp
play.db.prototype.hikaricp.maximumPoolSize = 2

db.intake24_foods.driver = "org.postgresql.Driver"
db.intake24_foods.url = "jdbc:postgresql://localhost/intake24_foods_development"
db.intake24_foods.username = "postgres"
db.intake24_foods.password = ""

db.intake24_system.driver = "org.postgresql.Driver"
db.intake24_system.url = "jdbc:postgresql://localhost/intake24_system_development"
db.intake24_system.username = "postgres"
db.intake24_system.password = ""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.


play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "modules.Intake24ServicesModule"

play.modules.enabled += "modules.S3StorageModule"

play.modules.enabled += "modules.AmazonWebServicesModule"

play.http.filters = filters.Intake24ApiFilters

play.http.parser.maxDiskBuffer = 20MB
play.http.parser.maxMemoryBuffer = 10MB

play.mailer {
  host = host
  mock = yes
}

twilio {
  mock = yes
}

intake24 {

  adminFrontendUrl = "http://localhost:3002"

  images {
    processor {
      commandSearchPath = "/usr/local/bin"
      command = ["convert"]
      source {
        thumbnailWidth = 768
        thumbnailHeight = 432
      }
      asServed {
        mainImageWidth = 654
        mainImageHeight = 436
        thumbnailWidth = 80
      }
      selectionScreen {
        width = 300
        height = 200
      }
      imageMaps {
        baseImageWidth = 654
        outlineBlurStrength = 6.0
        outlineStrokeWidth = 3.0
        outlineColor {
          r = 0.125
          g = 0.25
          b = 0.5
        }
      }
    }
    localStorage {
      baseDirectory = "/Users/nip13/Projects/Intake24/intake24-images-db"
      urlPrefix = "http://localhost"
    }

    S3Storage {
      bucketName = "intake24"
      pathPrefix = "dev/images"
    }
  }

  security {
    refreshTokenIdleExpiryDays = 30
    refreshTokenExpiryDays = 1825
    accessTokenExpiryMinutes = 10
  }

  help {
    callbackRequestRateSeconds = 7200
  }

  errorDigest {
    frequencyMinutes = 240
  }

  asyncDataExporter {
    batchSize = 50
    throttleRateMs = 50
    maxConcurrentTasks = 4

    s3 {
      bucketName = "test"
      pathPrefix = "intake24/export"
      urlExpirationTimeMinutes = 120
    }
  }

  recaptcha {
    secretKey = "6Ld_kjEUAAAAAKnvcsprEEDOU6FEaSLbxx_XXdnF"
  }

}