# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# SHARED CONTROLLERS #

POST    /signin                     controllers.Auth.signin

GET     /users/:survey/:userName    controllers.Users.info(survey: String, userName: String)

GET     /surveys/:survey            controllers.Surveys.info(survey: String)

GET     /index/lookup/:locale/:term               controllers.FoodIndexController.lookup(locale, term)

OPTIONS /*dontcare                  controllers.Application.corsPreflight(dontcare: String)

# ADMIN CONTROLLERS #

# Locales

GET     /admin/locales						          controllers.LocalesAdminController.listLocales()
GET     /admin/locales/:id							  controllers.LocalesAdminController.getLocale(id)


# Browsing

GET     /admin/browse/:locale/root-categories                       controllers.FoodBrowsingAdminController.getRootCategories(locale: String)
GET     /admin/browse/:locale/uncategorised-foods                   controllers.FoodBrowsingAdminController.getUncategorisedFoods(locale: String)

GET     /admin/browse/:locale/:code                                 controllers.FoodBrowsingAdminController.getCategoryContents(code: String, locale: String)

GET     /admin/browse/:locale/food-parent-categories/:code          controllers.FoodBrowsingAdminController.getFoodParentCategories(code: String, locale: String)
GET     /admin/browse/:locale/food-all-categories/:code             controllers.FoodBrowsingAdminController.getFoodAllCategories(code: String, locale: String)

GET     /admin/browse/:locale/category-parent-categories/:code      controllers.FoodBrowsingAdminController.getFoodParentCategories(code: String, locale: String)
GET     /admin/browse/:locale/category-all-categories/:code         controllers.FoodBrowsingAdminController.getCategoryAllCategories(code: String, locale: String)

# Quick search

GET     /admin/quick-search/:locale/categories/:term                controllers.QuickSearchController.searchCategories(term: String, locale: String)
GET     /admin/quick-search/:locale/foods/:term                     controllers.QuickSearchController.searchFoods(term: String, locale: String)

# Foods

GET     /admin/foods/code-available/:code             controllers.FoodsAdminController.isFoodCodeAvailable(code: String)
GET     /admin/foods/:locale/:code                    controllers.FoodsAdminController.getFoodRecord(code: String, locale: String)

POST    /admin/foods/new                              controllers.FoodsAdminController.createFood()
POST    /admin/foods/new-with-temp-code               controllers.FoodsAdminController.createFoodWithTempCode()
POST    /admin/foods/:code                            controllers.FoodsAdminController.updateMainFoodRecord(code: String)
POST    /admin/foods/:locale/:code                    controllers.FoodsAdminController.updateLocalFoodRecord(code: String, locale: String)
DELETE  /admin/foods/:code                            controllers.FoodsAdminController.deleteFood(code)

# Categories

GET     /admin/categories/code-available/:code                           controllers.CategoriesAdminController.isCategoryCodeAvailable(code)
GET     /admin/categories/:locale/:code                                  controllers.CategoriesAdminController.getCategoryRecord(code: String, locale: String)

PUT     /admin/categories/:categoryCode/foods/:foodCode                  controllers.CategoriesAdminController.addFoodToCategory(categoryCode: String, foodCode: String)
DELETE  /admin/categories/:categoryCode/foods/:foodCode                  controllers.CategoriesAdminController.removeFoodFromCategory(categoryCode: String, foodCode: String)
PUT     /admin/categories/:categoryCode/subcategories/:subcategoryCode   controllers.CategoriesAdminController.addSubcategoryToCategory(categoryCode: String, subcategoryCode: String)
DELETE  /admin/categories/:categoryCode/subcategories/:subcategoryCode   controllers.CategoriesAdminController.removeSubcategoryFromCategory(categoryCode: String, subcategoryCode: String)
POST    /admin/categories/new                                            controllers.CategoriesAdminController.createCategory()
POST    /admin/categories/:code                                          controllers.CategoriesAdminController.updateMainCategoryRecord(code: String)
POST    /admin/categories/:locale/:code                                  controllers.CategoriesAdminController.updateLocalCategoryRecord(code: String, locale: String)
DELETE  /admin/categories/:code                                          controllers.CategoriesAdminController.deleteCategory(code: String)


# Problem checker

GET     /admin/categories/:locale/:code/problems             controllers.ProblemCheckerController.checkCategory(code: String, locale: String)
GET     /admin/categories/:locale/:code/problems/recursive   controllers.ProblemCheckerController.checkCategoryRecursive(code: String, locale: String)


# Food groups

GET     /admin/food-groups/:locale                           controllers.FoodGroupsAdminController.listFoodGroups(locale: String)
GET     /admin/food-groups/:locale/:id                       controllers.FoodGroupsAdminController.getFoodGroup(id: Int, locale: String)


# Associated foods

GET     /admin/associated-foods/:locale/:code                controllers.AssoicatedFoodsAdminController.getAssociatedFoodPrompts(code: String, locale: String)
POST    /admin/associated-foods/:locale/:code                controllers.AssoicatedFoodsAdminController.updateAssociatedFoodPrompts(code: String, locale: String)

# Portion size methods

GET     /admin/portion-size/as-served                        controllers.AsServedImageAdminController.listAsServedSets()
GET     /admin/portion-size/as-served/:id                    controllers.AsServedImageAdminController.getAsServedSet(id: String)

GET     /admin/portion-size/guide-image                      controllers.GuideImageAdminController.listGuideImages()
GET     /admin/portion-size/guide-image/:id                  controllers.GuideImageAdminController.guideDef(id: String)

GET     /admin/portion-size/drinkware                        controllers.DrinkwareAdminController.listDrinkware()
GET     /admin/portion-size/drinkware/:id                    controllers.DrinkwareAdminController.drinkwareDef(id: String)

GET     /user/foods/:locale/:code                            controllers.UserFoodDataController.foodData(code: String, locale: String)
GET     /user/foods/:locale/:code/with-sources               controllers.UserFoodDataController.foodDataWithSources(code: String, locale: String)
GET     /user/foods/:locale/:code/brand-names                controllers.UserFoodDataController.brandNames(code: String, locale: String)
GET     /user/foods/:locale/:code/associated-foods           controllers.UserFoodDataController.associatedFoodPrompts(code: String, locale: String)

# Nutrient tables

GET     /admin/nutrient-tables                controllers.NutrientTablesAdminController.listNutrientTables()


# GET     /index/synsets/:locale                controllers.FoodIndexController.synsets(locale: String)
# GET     /index/split-list/:locale             controllers.FoodIndexController.splitList(locale: String)


